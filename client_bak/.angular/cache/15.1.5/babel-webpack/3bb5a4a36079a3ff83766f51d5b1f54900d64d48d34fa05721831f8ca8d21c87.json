{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../services/camera.service\";\nexport class UploadComponent {\n  constructor(router, fb, cameraSvc) {\n    this.router = router;\n    this.fb = fb;\n    this.cameraSvc = cameraSvc;\n    this.imageData = \"\";\n  }\n  ngOnInit() {\n    if (!this.cameraSvc.imageData) {\n      this.router.navigate(['/']);\n      return;\n    }\n    this.imageData = this.cameraSvc.imageData;\n    this.form = this.fb.group({\n      title: this.fb.control(''),\n      complain: this.fb.control('')\n    });\n    this.blob = this.dataURItoBlob(this.imageData);\n    console.log(this.blob);\n  }\n  upload() {\n    const formVal = this.form.value;\n    this.cameraSvc.upload(formVal, this.blob).then(result => {\n      this.router.navigate(['/']);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(',')[1]);\n    let mimeString = dataURI.split(',')[0].split(';')[0];\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CameraService));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload-component\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"thumbnail\", 3, \"src\"], [\"type\", \"text\", \"size\", \"30\", \"formControlName\", \"title\"], [\"type\", \"text\", \"size\", \"30\", \"formControlName\", \"complain\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵelementStart(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵelement(4, \"img\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"tr\")(6, \"td\");\n      i0.ɵɵtext(7, \" Title: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"td\");\n      i0.ɵɵelement(9, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"tr\")(11, \"td\");\n      i0.ɵɵtext(12, \" Title: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"td\");\n      i0.ɵɵelement(14, \"input\", 3);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.imageData, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,eAAe;EAK1BC,YAAoBC,MAAc,EAAUC,EAAe,EAC/CC,SAAyB;IADjB,WAAM,GAANF,MAAM;IAAkB,OAAE,GAAFC,EAAE;IAClC,cAAS,GAATC,SAAS;IALrB,cAAS,GAAG,EAAE;EAOd;EACAC,QAAQ;IACJ,IAAG,CAAC,IAAI,CAACD,SAAS,CAACE,SAAS,EAAC;MAC3B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B;;IAEF,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,SAAS,CAACE,SAAS;IACzC,IAAI,CAACE,IAAI,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CACvB;MACEC,KAAK,EAAE,IAAI,CAACP,EAAE,CAACQ,OAAO,CAAS,EAAE,CAAC;MAClCC,QAAQ,EAAE,IAAI,CAACT,EAAE,CAACQ,OAAO,CAAS,EAAE;KACrC,CACF;IACD,IAAI,CAACE,IAAI,GAAG,IAAI,CAACC,aAAa,CAAC,IAAI,CAACR,SAAS,CAAC;IAC9CS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAAC;EAC1B;EAEAI,MAAM;IACJ,MAAMC,OAAO,GAAG,IAAI,CAACV,IAAI,CAACW,KAAK;IAC/B,IAAI,CAACf,SAAS,CAACa,MAAM,CAACC,OAAO,EAAE,IAAI,CAACL,IAAI,CAAC,CAACO,IAAI,CAAEC,MAAM,IAAG;MACvD,IAAI,CAACnB,MAAM,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAACe,KAAK,CAACC,KAAK,IAAE;MACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAT,aAAa,CAACU,OAAe;IAC3B,IAAIC,UAAU,GAAGC,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,IAAIC,UAAU,GAAGJ,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,IAAIE,EAAE,GAAG,IAAIC,WAAW,CAACL,UAAU,CAACM,MAAM,CAAC;IAC3C,IAAIC,EAAE,GAAG,IAAIC,UAAU,CAACJ,EAAE,CAAC;IAC3B,KAAI,IAAIK,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAET,UAAU,CAACM,MAAM,EAAEG,CAAC,EAAE,EAAC;MACtCF,EAAE,CAACE,CAAC,CAAC,GAAGT,UAAU,CAACU,UAAU,CAACD,CAAC,CAAC;;IAElC,OAAO,IAAIE,IAAI,CAAC,CAACP,EAAE,CAAC,EAAE;MAACQ,IAAI,EAAET;IAAU,CAAC,CAAC;EAC3C;;AA3CW5B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAsC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,+BAA+C;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MAC1CD,6BAAO;MAGKA,yBAA0C;MAC9CA,iBAAK;MAGTA,0BAAI;MAEIA,wBACJ;MAAAA,iBAAK;MACLA,0BAAI;MACAA,2BAAsD;MAC1DA,iBAAK;MAGTA,2BAAI;MAEIA,yBACJ;MAAAA,iBAAK;MACLA,2BAAI;MACAA,4BAAyD;MAC7DA,iBAAK;;;MAvBXA,oCAAkB;MAIHA,eAAiB;MAAjBA,qDAAiB","names":["UploadComponent","constructor","router","fb","cameraSvc","ngOnInit","imageData","navigate","form","group","title","control","complain","blob","dataURItoBlob","console","log","upload","formVal","value","then","result","catch","error","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kennethphang/Projects/day37/client/src/app/components/upload.component.ts","/Users/kennethphang/Projects/day37/client/src/app/components/upload.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CameraService } from '../services/camera.service';\n\n@Component({\n  selector: 'app-upload-component',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit{\n  imageData = \"\"\n  form!: FormGroup;\n  blob!: Blob;\n\n  constructor(private router: Router, private fb: FormBuilder,\n      private cameraSvc : CameraService){\n\n  }\n  ngOnInit(): void {\n      if(!this.cameraSvc.imageData){\n        this.router.navigate(['/'])\n        return;\n      }\n      this.imageData = this.cameraSvc.imageData;\n      this.form = this.fb.group(\n        {\n          title: this.fb.control<string>(''),\n          complain: this.fb.control<string>(''),\n        }\n      );\n      this.blob = this.dataURItoBlob(this.imageData);\n      console.log(this.blob);\n  }\n\n  upload(){\n    const formVal = this.form.value;\n    this.cameraSvc.upload(formVal, this.blob).then((result)=>{\n      this.router.navigate(['/']);\n    }).catch(error=> {\n      console.error(error);\n    })\n  }\n\n  dataURItoBlob(dataURI: String){\n    var byteString = atob(dataURI.split(',')[1]);\n    let mimeString = dataURI.split(',')[0].split(';')[0];\n    var ab = new ArrayBuffer(byteString.length)\n    var ia = new Uint8Array(ab)\n    for(var i =0; i <byteString.length; i++){\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {type: mimeString});\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"upload()\">\n    <table>\n        <tr>\n            <td>\n                <img [src]=\"imageData\" class=\"thumbnail\"/>\n            </td>\n        </tr>\n\n        <tr>\n            <td>\n                Title:\n            </td>\n            <td>\n                <input type=\"text\" size=\"30\" formControlName=\"title\"/>\n            </td>\n            \n        </tr>\n        <tr>\n            <td>\n                Title:\n            </td>\n            <td>\n                <input type=\"text\" size=\"30\" formControlName=\"complain\"/>\n            </td>\n            \n        </tr>\n    </table>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}